<Project>
  <PropertyGroup>
    <ConsumerConfigurationDirectory>$(MSBuildThisFileDirectory)../config/consumer</ConsumerConfigurationDirectory>
  </PropertyGroup>

  <!-- If configured, create a global .stylelintrc file at the desired location if exists and is a directory. -->
  <Target Name="SetUpGlobalStylelintConfiguration" BeforeTargets="Compile">
    <PropertyGroup>
      <IsGlobalStylelintConfigurationDirectoryValid
        Condition="
          Exists($(NodeJsExtensionsGlobalStylelintConfigurationDirectory))
          AND !$([System.IO.File]::Exists($(NodeJsExtensionsGlobalStylelintConfigurationDirectory)))
        ">true</IsGlobalStylelintConfigurationDirectoryValid>
    </PropertyGroup>
    <!-- Emit a warning in case the provided path is a file and not a directory. -->
    <Warning
      Code="NE01"
      Text="The path '$(NodeJsExtensionsGlobalStylelintConfigurationDirectory)' in 'NodeJsExtensionsGlobalStylelintConfigurationDirectory' is not a directory."
      Condition="'$(NodeJsExtensionsGlobalStylelintConfigurationDirectory)' != '' AND '$(IsGlobalStylelintConfigurationDirectoryValid)' != 'true'" />
    <!-- Do the real work if all's good. -->
    <CallTarget Targets="_ProcessStylelintConfigFile" Condition="'$(IsGlobalStylelintConfigurationDirectoryValid)' == 'true'" />
  </Target>

  <Target Name="_ProcessStylelintConfigFile" DependsOnTargets="EnablePnpm">
    <ItemGroup>
      <StylelintrcFile Include="$(NodeJsExtensionsGlobalESLintConfigurationDirectory)/.stylelintrc*" />
    </ItemGroup>
    <!-- Copy the global .stylelintrc.js to the desired directory. -->
    <Copy SourceFiles="$(ConsumerConfigurationDirectory)/.stylelintrc.global.js"
          DestinationFiles="$(NodeJsExtensionsGlobalESLintConfigurationDirectory)/.stylelintrc.js"
          Condition="'@(StylelintrcFile)' == ''" />
  </Target>

  <!-- For ESLint to work properly during Build AND in Visual Studio, we need to put the configuration and plugin
       packages used by our ESLint Lombiq base configuration next to the referencing .eslintrc file. -->
  <Target Name="SetUpGlobalESLintConfiguration" BeforeTargets="Compile">
    <PropertyGroup>
      <IsGlobalESLintConfigurationDirectoryValid
        Condition="
          Exists($(NodeJsExtensionsGlobalESLintConfigurationDirectory))
          AND !$([System.IO.File]::Exists($(NodeJsExtensionsGlobalESLintConfigurationDirectory)))
        ">true</IsGlobalESLintConfigurationDirectoryValid>
    </PropertyGroup>
    <!-- Emit a warning in case the provided path is a file and not a directory. -->
    <Warning
      Code="NE01"
      Text="The path '$(NodeJsExtensionsGlobalESLintConfigurationDirectory)' in 'NodeJsExtensionsGlobalESLintConfigurationDirectory' is not a directory."
      Condition="'$(NodeJsExtensionsGlobalESLintConfigurationDirectory)' != '' AND '$(IsGlobalESLintConfigurationDirectoryValid)' != 'true'" />
    <!-- Do the real work if all's good. -->
    <CallTarget Targets="_ProcessESLintConfigFiles" Condition="'$(IsGlobalESLintConfigurationDirectoryValid)' == 'true'" />
  </Target>

  <Target Name="_ProcessESLintConfigFiles" DependsOnTargets="EnablePnpm">
    <ItemGroup>
      <ESLintrcFile Include="$(NodeJsExtensionsGlobalESLintConfigurationDirectory)/.eslintrc*" />
    </ItemGroup>
    <!-- Copy the global .eslintrc.js to the desired directory. -->
    <Copy SourceFiles="$(ConsumerConfigurationDirectory)/.eslintrc.global.js"
          DestinationFiles="$(NodeJsExtensionsGlobalESLintConfigurationDirectory)/.eslintrc.js"
          Condition="'@(ESLintrcFile)' == ''" />
    <!-- Copy a minimal package.json file into the desired directory in case there isn't any yet. This saves from manual
         fiddling with those files whenever it's not necessary. -->
    <Copy SourceFiles="$(ConsumerConfigurationDirectory)/package.minimal.json"
          DestinationFiles="$(NodeJsExtensionsGlobalESLintConfigurationDirectory)/package.json"
          Condition="!Exists('$(NodeJsExtensionsGlobalESLintConfigurationDirectory)/package.json')" />
    <!-- Add the necessary ESLint plugin package dependencies to the package.json file. -->
    <Exec Command="node &quot;$(MSBuildThisFileDirectory)/../scripts/add-dev-dependencies.js&quot;"
          WorkingDirectory="$(NodeJsExtensionsGlobalESLintConfigurationDirectory)" />
    <!-- Install all ESLint config dependencies of Node.js Extensions in the desired directory. -->
    <Exec Command="pnpm install"
          WorkingDirectory="$(NodeJsExtensionsGlobalESLintConfigurationDirectory)"
          StandardOutputImportance="Low" />
  </Target>
</Project>
