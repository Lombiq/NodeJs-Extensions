<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Only include this file when working with a ProjectReference; when using the NuGet package, this file will be
       included automatically via the consuming project's .nuget.g.props file. -->
  <Import Project="../../Lombiq.Npm.Targets/Lombiq.Npm.Targets.targets"
          Condition="Exists('../../Lombiq.Npm.Targets/Lombiq.Npm.Targets.targets')" />

  <PropertyGroup>
    <!-- The following environment variables will be passed to the npm scripts. We evaluate them only here so that
         consumer projects can adjust them after importing our .props file. -->
    <NpmCommandsEnvironmentVariables>
      TARGET_DIR=$(MSBuildProjectDirectory.Replace('\', '/'));
      SCSS_SOURCE=$(NodeJsExtensionsStylesSourceFolder.Replace('\', '/'));
      SCSS_TARGET=$(NodeJsExtensionsStylesTargetFolder.Replace('\', '/'));
    </NpmCommandsEnvironmentVariables>
  </PropertyGroup>

  <ItemGroup>
    <!-- The following items are used by NPM Targets to support incremental builds. We evaluate them only here so that
         consumer projects can adjust them after importing our .props file. -->
    <NpmDotnetPrebuildWatchedFiles Remove="@(NpmDotnetPrebuildWatchedFiles)" />
    <NpmDotnetPrebuildWatchedFiles Include="$(MSBuildProjectDirectory)/$(NodeJsExtensionsStylesSourceFolder)/**/*.*" />
  </ItemGroup>

  <!-- We print some helpful information here, but only when the verbosity is large enough. -->
  <Target Name="PrintDebugMessages" BeforeTargets="NpmDotnetPrebuild">
    <Message Text="NodeJsExtensionsInstallationPath:     '$(NodeJsExtensionsInstallationPath)'"     Importance="High" />
    <Message Text="NodeJsExtensionsNpmPackageSourcePath: '$(NodeJsExtensionsNpmPackageSourcePath)'" Importance="High" />
    <Message Text="NpmTargetsWorkingDirectory:           '$(NpmTargetsWorkingDirectory)'"           Importance="High" />
    <Message Text="NpmDotnetPrebuildWatchedFiles:%0a - @(NpmDotnetPrebuildWatchedFiles, '%0a - ')"  Importance="High" />
  </Target>

  <!-- Adding Node.js Extensions as an npm package to the consuming project in order to be able to run the build, clean,
       and watch scripts from there. -->
  <Target Name="AddNodeJsExtensionsAsNpmPackage" BeforeTargets="NpmInstall">
    <!-- Create the "node_modules" and ".nodejs-extensions" folders here. The former is needed for the stamp file. -->
    <Copy SourceFiles="@(NodeJsExtensionsNpmPackageFiles)"
          DestinationFiles="$(NodeJsExtensionsNpmPackageSourcePath)/%(RecursiveDir)%(Filename)%(Extension)"
          SkipUnchangedFiles="true" />
    <!-- Here we install Node.js Extensions as an npm package into the consumer project. Using
         StandardOutputImportance="Low" will hide the output during normal operation, but show it when using diagnostic
         verbosity! O_O -->
    <Exec
      Command="pnpm install --save-dev $(NodeJsExtensionsNpmPackageSourcePath)"
      StandardOutputImportance="Low"
      ContinueOnError="true" />
    <!-- Place a .stylelintrc file into the consumer project that won't be overwritten subsequently, so may be adjusted
         there. To prevent creating this file, set NodeJsExtensionsCreateStylelintConfigurationFile to false. -->
    <Copy SourceFiles="$(NodeJsExtensionsNpmPackageTargetPath)/Stylelint/.stylelintrc.consumer"
          DestinationFiles="$(MSBuildProjectDirectory)/.stylelintrc"
          Condition="'$(NodeJsExtensionsCreateStylelintConfigurationFile)' == 'true' AND !Exists('$(MSBuildProjectDirectory)/.stylelintrc')" />
  </Target>

  <!-- Files that are generated during the build need to be added manually to the EmbeddedResource item group, else they
       won't be embedded in the DLL. See: https://github.com/dotnet/msbuild/issues/3271#issuecomment-386662451. -->
  <Target
    Name="AddGeneratedFilesToEmbeddedResourceList"
    AfterTargets="NpmDotnetPrebuild"
    BeforeTargets="GenerateStylesPipelineErrors">
    <ItemGroup>
      <EmbeddedResource Include="$(NodeJsExtensionsStylesTargetFolder)/**" WithCulture="false" Type="Non-Resx" />
    </ItemGroup>
  </Target>

  <!-- The messages to search for in the build output, used in the Conditions, are defined in the package.json file. -->
  <Target
    Name="GenerateStylesPipelineErrors"
    AfterTargets="NpmDotnetPrebuild"
    BeforeTargets="Compile">
    <Message Text="Running GenerateStylesPipelineErrors for '$(MSBuildProjectName)'" />
    <Warning
      Code="NX01"
      Text="Stylelint error in Node.js Extensions script, check the build output for more information."
      Condition="$(PrebuildOutput.Contains('Error in styles pipeline: stylelint failed'))" />
    <Error
      Code="NX02"
      Text="Compilation error in Node.js Extensions script, check the build output for more information."
      Condition="$(PrebuildOutput.Contains('Error in styles pipeline: compilation failed'))" />
  </Target>

</Project>
