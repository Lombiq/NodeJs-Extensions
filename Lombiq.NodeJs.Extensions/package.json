{
  "name": "nodejs-extensions",
  "version": "0.0.1",
  "private": true,
  "devDependencies": {
    "autoprefixer": "^10.4.4",
    "clean-css-cli": "^5.5.2",
    "eslint": "^8.16.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-only-warn": "^1.0.3",
    "eslint-plugin-promise": "^6.0.0",
    "nodemon": "^2.0.15",
    "npm-run-all": "^4.1.5",
    "postcss": "^8.4.12",
    "postcss-cli": "^9.1.0",
    "rimraf": "^3.0.2",
    "sass": "^1.49.9",
    "stylelint": "^14.6.1",
    "stylelint-config-standard-scss": "^3.0.0"
  },
  "scripts": {
    "__shell_docs__": "https://github.com/yarnpkg/berry/blob/master/packages/yarnpkg-shell/tests/shell.test.ts",
    "-": "------------------------------------------------------------------------------------------------------------",
    "build": "run-p --continue-on-error build:scripts",
    "compile": "pnpm compile:styles",
    "clean": "pnpm clean:styles",
    "--": "-------------------------------------------------- STYLES -------------------------------------------------",
    "echo-env": "npm run env",
    "build:styles":
      "TARGET_DIR=${TARGET_DIR:-../../..} SCSS_SOURCE=${SCSS_SOURCE:-Assets/Styles} SCSS_TARGET=${SCSS_TARGET:-wwwroot/css} pnpm _build:styles",
    "build:styles:args":
      "TARGET_DIR=${TARGET_DIR:-../../..} SCSS_SOURCE=$npm_config_source SCSS_TARGET=$npm_config_target pnpm _build:styles",
    "_build:styles": "run-p --continue-on-error _compile:styles _lint:styles",
    "lint:styles": "TARGET_DIR=../../.. SCSS_SOURCE=Assets/Styles pnpm _lint:styles",
    "lint:styles:args": "TARGET_DIR=../../.. SCSS_SOURCE=$npm_config_source pnpm _lint:styles",
    "_lint:styles":
      "(cd $TARGET_DIR && stylelint \"$SCSS_SOURCE/**/*.scss\") || AREA=styles STEP=linting pnpm _error:styles",
    "compile:styles":
      "TARGET_DIR=${TARGET_DIR:-../../..} SCSS_SOURCE=${SCSS_SOURCE:-Assets/Styles} SCSS_TARGET=${SCSS_TARGET:-wwwroot/css} pnpm _compile:styles",
    "compile:styles:args":
      "TARGET_DIR=../../.. SCSS_SOURCE=$npm_config_source SCSS_TARGET=$npm_config_target pnpm _compile:styles",
    "_compile:styles":
      "run-s _sass:styles _autoprefix:styles _minify:styles _rm:temp:styles || AREA=styles STEP=compilation pnpm _error:styles",
    "_sass:styles": "cd $TARGET_DIR && sass $SCSS_SOURCE:$SCSS_TARGET/_temp_ --embed-sources",
    "_autoprefix:styles":
      "cd $TARGET_DIR && postcss $SCSS_TARGET/_temp_/**/*.css --base $SCSS_TARGET/_temp_ --dir $SCSS_TARGET --use autoprefixer --map",
    "_minify:styles":
      "cd $TARGET_DIR && cleancss --batch --batch-suffix .min \"$SCSS_TARGET/**/*.css\" \"!$SCSS_TARGET/**/*.min.css\" \"!$SCSS_TARGET/_temp_/**/*\"",
    "_rm:temp:styles": "cd $TARGET_DIR && rimraf $SCSS_TARGET/_temp_",
    "clean:styles": "TARGET_DIR=../../.. SCSS_TARGET=wwwroot/css pnpm _clean:styles",
    "clean:styles:args": "TARGET_DIR=../../.. SCSS_TARGET=$npm_config_target pnpm _clean:styles",
    "_clean:styles": "cd $TARGET_DIR && rimraf \"$SCSS_TARGET/**/*.*\"",
    "watch:styles": "SCSS_SOURCE=Assets/Styles SCSS_TARGET=wwwroot/css pnpm _watch:styles",
    "watch:styles:args": "SCSS_SOURCE=$npm_config_source SCSS_TARGET=$npm_config_target pnpm _watch:styles",
    "_watch:styles":
      "nodemon --watch ../../$SCSS_SOURCE --ext scss --exec \"pnpm build:styles:args --source=$SCSS_SOURCE --target=$SCSS_TARGET\"",
    "---": "------------------------------------------------- SCRIPTS ------------------------------------------------",
    "build:scripts": "run-p --continue-on-error lint:scripts",
    "lint:scripts":
      "(cd ../../.. && npx eslint --max-warnings 1 ${npm_config_source:-Assets/Scripts}) || AREA=scripts STEP=linting pnpm _error",
    "----": "---------------------------------------------------------------------------------------------------------",
    "_error": "echo \"Error in $AREA pipeline: $STEP failed.\""
  },
  "browserslist": [
    "defaults"
  ],
  "eslintConfig": {
    "extend": "ESLint/lombiq-base.js"
  }
}
